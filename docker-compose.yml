
networks:
   backend:
    name: backend

services:
  api:
    container_name: api
    restart: unless-stopped
    build:
      context: ./server/api
    command: sh -c 'echo "waiting for db..."; sleep 10; echo "running migration..."; cd /api; yarn migrate; yarn serve'
    depends_on: 
      - db
    ports:
      - "4200:4200"
    networks:
      - backend

  web-socket:
    container_name: web-socket
    restart: unless-stopped
    build:
      context: ./server/socket
    ports:
      - "3000:3000"

  db:
    image: postgres:17.0-alpine3.20
    restart: always
    environment:
      - POSTGRES_USER=dev
      - POSTGRES_PASSWORD=dev
      - POSTGRES_DB=lyrics_projection
    ports:
      - '5432:5432'
    volumes: 
      - ./db:/var/lib/postgresql/data
    networks:
      - backend

  frontend:
    container_name: frontend
    restart: unless-stopped
    build:
      context: ./frontend
    ports:
      - "80:80"
    depends_on:
      - api
      - web-socket
    networks:
      - backend
